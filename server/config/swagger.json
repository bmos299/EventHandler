{
    "swagger": "2.0",
    "info": {
        "description": "APIs for AITrust PoC",
        "version": "1.0.0",
        "title": "AITrust API"
    },
    "tags": [
        {
            "name": "AITrustAsset",
            "description": "Management of AITrust Asset"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/AITrustAssets": {
            "post": {
                "tags": [
                    "AITrustAsset"
                ],
                "summary": "Create new AITrustAsset",
                "description": "",
                "operationId": "createAsset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "x-org-name",
                        "in": "header",
                        "description": "Name of transacting organization",
                        "required": false,
                        "type": "string",
                        "default": "Org1",
                        "enum": [
                            "Org1",
                            "Org2"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AITrustAsset to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AITrustAsset"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "AITrustAsset"
                ],
                "summary": "Finds AITrustAsset by type and owner",
                "description": "",
                "operationId": "findByType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "x-org-name",
                        "in": "header",
                        "description": "Name of transacting organization",
                        "required": false,
                        "type": "string",
                        "default": "Org1",
                        "enum": [
                            "Org1",
                            "Org2"
                        ]
                    },
                    {
                        "name": "assetType",
                        "in": "query",
                        "description": "Type of asset to query",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Data",
                            "Linear_Mode",
                            "Performance_Claim",
                            "Model_Inference"
                        ]
                    },
                    {
                        "name": "assetOwner",
                        "in": "query",
                        "description": "MSP ID for owning organization",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AITrustAsset"
                        }
                    },
                    "400": {
                        "description": "Invalid Inputs"
                    }
                }
            }
        },
        "/AITrustAssets/{assetUUID}": {
            "patch": {
                "tags": [
                    "AITrustAsset"
                ],
                "summary": "Update an existing AITrustAsset",
                "description": "Update specific attributes of an AITrust asset.   Other than the `assetUUID` and `assetType` all other properties can be modified.   Only the property specified during this API call will be modified.  The rest of the properties of the asset will remain the same.  ",
                "operationId": "updateAsset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "x-org-name",
                        "in": "header",
                        "description": "Name of transacting organization",
                        "required": false,
                        "type": "string",
                        "default": "Org1",
                        "enum": [
                            "Org1",
                            "Org2"
                        ]
                    },
                    {
                        "name": "assetUUID",
                        "in": "path",
                        "description": "ID of assetUUID to modify",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Attributes to update from existing AITrustAsset",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AITrustAsset"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "AITrustAsset not found"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "AITrustAsset"
                ],
                "summary": "Find AITrustAsset by ID",
                "description": "Returns a single AITrustAsset",
                "operationId": "getAITrustAssetByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "x-org-name",
                        "in": "header",
                        "description": "Name of transacting organization",
                        "required": false,
                        "type": "string",
                        "default": "Org1",
                        "enum": [
                            "Org1",
                            "Org2"
                        ]
                    },
                    {
                        "name": "assetUUID",
                        "in": "path",
                        "description": "ID of assetUUID to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AITrustAsset"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "AITrustAsset not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AITrustAsset"
                ],
                "summary": "Delete AITrustAsset by ID",
                "description": "Deletes AITrustAsset",
                "operationId": "deleteAITrustAssetByID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "x-org-name",
                        "in": "header",
                        "description": "Name of transacting organization",
                        "required": false,
                        "type": "string",
                        "default": "Org1",
                        "enum": [
                            "Org1",
                            "Org2"
                        ]
                    },
                    {
                        "name": "assetUUID",
                        "in": "path",
                        "description": "ID of assetUUID to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AITrustAsset"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "AITrustAsset not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "AITrustAsset": {
            "type": "object",
            "required": [
                "assetType",
                "propertyHashes",
                "propertyValues",
                "sourceAssets",
                "transformationType",
                "transformationInfo",
                "otherInfo"
            ],
            "properties": {
                "assetType": {
                    "type": "string",
                    "enum": [
                        "Data",
                        "Linear_Mode",
                        "Performance_Claim",
                        "Model_Inference"
                    ]
                },
                "propertyHashes": {
                    "description": "Dictionary of asset propery hashes",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "propertyValues": {
                    "description": "Dictionary of asset property values",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "sourceAssets": {
                    "description": "Lineage - Array of UUIDs of source assets",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "transformationType": {
                    "description": "Lineage - type of transformation",
                    "type": "string",
                    "enum": [
                        "Aggregation",
                        "QueryFilter",
                        "LinearRegressionTraining"
                    ]
                },
                "transformationInfo": {
                    "description": "Lineage - Dictionary of transformation details",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "otherInfo": {
                    "description": "Other asset details",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}